<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Final Project - Portfolio with To-Do & Contact</title>
  <style>
    /* Reset & basics */
    * {
      box-sizing: border-box;
    }
    body {
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      margin: 0;
      line-height: 1.6;
      background: #f4f7f8;
      color: #333;
    }

    /* Navbar */
    nav {
      display: -webkit-flex; /* Safari */
      display: flex;
      justify-content: center;
      gap: 2rem;
      flex-wrap: wrap;
      background: #0056b3;
      padding: 1rem 0;
      box-shadow: 0 2px 6px rgba(0,0,0,0.15);
      position: sticky;
      top: 0;
      z-index: 100;
    }

    .nav-link {
      font-weight: 700;
      font-size: 1.2rem;
      color: #fff;
      padding: 0.4rem 1rem;
      border-radius: 5px;
      transition: background-color 0.3s ease;
      text-decoration: none;
    }

    .nav-link:hover,
    .nav-link:focus {
      background-color: #003d80;
      outline: none;
    }

    header {
      margin-bottom: 2rem;
    }

    /* Sections */
    section {
      max-width: 900px;
      margin: 2rem auto;
      background: white;
      padding: 2rem;
      border-radius: 8px;
      box-shadow: 0 0 10px rgba(0,0,0,0.1);
    }

    h1, h2 {
      color: #0056b3;
      text-align: center;
    }

    /* Hero Section */
    #hero {
      padding: 4rem 2rem;
      background: url('https://images.unsplash.com/photo-1507525428034-b723cf961d3e?auto=format&fit=crop&w=900&q=80') no-repeat center/cover;
      background-size: cover;
      color: white;
      text-shadow: 2px 2px 6px rgba(0,0,0,0.7);
      border-radius: 8px;
      max-width: 900px;
      margin: 2rem auto;
      text-align: center;
    }

    /* Projects Section */
    #projects .project-list {
      display: grid;
      grid-template-columns: repeat(auto-fit,minmax(280px,1fr));
      gap: 1.5rem;
      padding: 0;
      list-style: none;
    }

    #projects .project-list li {
      background: #e9f1ff;
      padding: 1rem;
      border-radius: 6px;
      box-shadow: 0 2px 6px rgba(0,0,0,0.1);
      display: flex;
      flex-direction: column;
      align-items: center;
    }

    #projects .project-list img {
      max-width: 100%;
      border-radius: 6px;
      margin-bottom: 1rem;
      display: block;
      loading: lazy;
    }

    #projects .project-list h3 {
      margin: 0.5rem 0;
      color: #003d80;
    }

    /* To-Do List */
    #todo {
      max-width: 400px;
      margin: 0 auto;
      text-align: center;
    }

    #todo-form input[type="text"] {
      padding: 0.5rem;
      width: 70%;
      font-size: 1rem;
      border: 2px solid #0056b3;
      border-radius: 4px 0 0 4px;
      outline: none;
      -webkit-appearance: none;
      appearance: none;
    }

    #todo-form button {
      padding: 0.5rem 1rem;
      font-size: 1rem;
      border: 2px solid #0056b3;
      border-left: none;
      background-color: #0056b3;
      color: white;
      cursor: pointer;
      border-radius: 0 4px 4px 0;
      transition: background-color 0.3s ease;
    }

    #todo-form button:hover,
    #todo-form button:focus {
      background-color: #003d80;
      outline: none;
    }

    #todo-list {
      list-style: none;
      padding: 0;
      margin-top: 1rem;
    }

    #todo-list li {
      background: #e9f1ff;
      margin-bottom: 0.5rem;
      padding: 0.5rem 1rem;
      border-radius: 4px;
      display: flex;
      justify-content: space-between;
      align-items: center;
      box-shadow: 0 1px 3px rgba(0,0,0,0.1);
    }

    #todo-list button.remove-task {
      background: #ff4c4c;
      border: none;
      color: white;
      padding: 0.3rem 0.6rem;
      border-radius: 4px;
      cursor: pointer;
      font-weight: bold;
      transition: background-color 0.3s ease;
    }

    #todo-list button.remove-task:hover,
    #todo-list button.remove-task:focus {
      background-color: #cc0000;
      outline: none;
    }

    /* Contact Form */
    #contact {
      max-width: 500px;
      margin: 2rem auto;
    }

    #contact-form {
      display: flex;
      flex-direction: column;
      gap: 1rem;
    }

    #contact-form label {
      font-weight: 600;
      margin-bottom: 0.25rem;
      display: block;
    }

    #contact-form input,
    #contact-form textarea {
      padding: 0.5rem;
      font-size: 1rem;
      border: 2px solid #0056b3;
      border-radius: 6px;
      width: 100%;
      resize: vertical;
      -webkit-appearance: none;
      appearance: none;
    }

    #contact-form button {
      background-color: #0056b3;
      color: white;
      border: none;
      padding: 0.75rem;
      font-size: 1.1rem;
      border-radius: 6px;
      cursor: pointer;
      transition: background-color 0.3s ease;
    }

    #contact-form button:hover,
    #contact-form button:focus {
      background-color: #003d80;
      outline: none;
    }

    #form-message {
      text-align: center;
      font-weight: 600;
      margin-top: 1rem;
      color: green;
    }

    /* Responsive */
    @media (max-width: 600px) {
      nav {
        gap: 1rem;
        padding: 0.5rem 0;
      }
      #todo-form input[type="text"] {
        width: 60%;
      }
    }
  </style>
</head>
<body>

<header>
  <nav aria-label="Primary Navigation">
    <a href="#hero" class="nav-link">Home</a>
    <a href="#projects" class="nav-link">Projects</a>
    <a href="#contact" class="nav-link">Contact</a>
  </nav>
</header>

<section id="hero" tabindex="-1" aria-label="Hero section introduction">
  <h1>Welcome to My Portfolio</h1>
  <p>Showcasing my projects, skills, and contact info all in one place.</p>
</section>

<section id="projects" aria-label="Projects showcase">
  <h2>Projects</h2>
  <ul class="project-list">
    <li>
      <img src="https://images.unsplash.com/photo-1498050108023-c5249f4df085?auto=format&fit=crop&w=400&q=80" alt="Project 1 Screenshot" loading="lazy" />
      <h3>Project One</h3>
      <p>A simple portfolio website showcasing design and coding skills.</p>
    </li>
    <li>
      <img src="https://images.unsplash.com/photo-1504384308090-c894fdcc538d?auto=format&fit=crop&w=400&q=80" alt="Project 2 Screenshot" loading="lazy" />
      <h3>Project Two</h3>
      <p>E-commerce site prototype with shopping cart and product filters.</p>
    </li>
    <li>
      <img src="https://images.unsplash.com/photo-1517433456452-f9633a875f6f?auto=format&fit=crop&w=400&q=80" alt="Project 3 Screenshot" loading="lazy" />
      <h3>Project Three</h3>
      <p>Interactive blog platform with commenting and user login features.</p>
    </li>
  </ul>
</section>

<section id="todo" aria-label="To-Do List Application">
  <h2>My To-Do List</h2>
  <form id="todo-form" aria-label="Add a new task">
    <input
      type="text"
      id="todo-input"
      aria-required="true"
      placeholder="Add new task..."
      autocomplete="off"
    />
    <button type="submit" aria-label="Add task">Add</button>
  </form>
  <ul id="todo-list" aria-live="polite" aria-relevant="additions removals"></ul>
</section>

<section id="contact" aria-label="Contact Form">
  <h2>Contact Me</h2>
  <form id="contact-form" novalidate>
    <label for="name">Name *</label>
    <input type="text" id="name" name="name" required autocomplete="name" />

    <label for="email">Email *</label>
    <input type="email" id="email" name="email" required autocomplete="email" />

    <label for="message">Message *</label>
    <textarea id="message" name="message" rows="5" required></textarea>

    <button type="submit">Send Message</button>
  </form>
  <div id="form-message" role="alert" aria-live="assertive"></div>
</section>

<script>
  // To-Do List JS
  const todoForm = document.getElementById('todo-form');
  const todoInput = document.getElementById('todo-input');
  const todoList = document.getElementById('todo-list');

  let tasks = JSON.parse(localStorage.getItem('tasks')) || [];

  function renderTasks() {
    todoList.innerHTML = '';
    tasks.forEach((task, index) => {
      const li = document.createElement('li');
      li.textContent = task;

      const btn = document.createElement('button');
      btn.textContent = 'Remove';
      btn.className = 'remove-task';
      btn.setAttribute('aria-label', `Remove task: ${task}`);
      btn.addEventListener('click', () => {
        tasks.splice(index, 1);
        saveAndRender();
      });

      li.appendChild(btn);
      todoList.appendChild(li);
    });
  }

  function saveAndRender() {
    localStorage.setItem('tasks', JSON.stringify(tasks));
    renderTasks();
  }

  todoForm.addEventListener('submit', (e) => {
    e.preventDefault();
    const task = todoInput.value.trim();
    if (task) {
      tasks.push(task);
      saveAndRender();
      todoInput.value = '';
      todoInput.focus();
    }
  });

  // Initial render on page load
  renderTasks();

  // Contact Form JS
  const contactForm = document.getElementById('contact-form');
  const formMessage = document.getElementById('form-message');

  contactForm.addEventListener('submit', (e) => {
    e.preventDefault();

    // Simple validation
    const name = contactForm.name.value.trim();
    const email = contactForm.email.value.trim();
    const message = contactForm.message.value.trim();

    if (!name || !email || !message) {
      formMessage.style.color = 'red';
      formMessage.textContent = 'Please fill out all required fields.';
      return;
    }

    // Basic email format check
    const emailPattern = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    if (!emailPattern.test(email)) {
      formMessage.style.color = 'red';
      formMessage.textContent = 'Please enter a valid email address.';
      return;
    }

    // If valid, simulate sending...
    formMessage.style.color = 'green';
    formMessage.textContent = 'Thank you! Your message has been sent.';

    // Clear form
    contactForm.reset();

    // Optionally, clear the message after a delay
    setTimeout(() => {
      formMessage.textContent = '';
    }, 5000);
  });
</script>

</body>
</html>
