<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width, initial-scale=1" />
<title>Portfolio & Projects</title>
<style>
  /* Reset and base */
  *, *::before, *::after { box-sizing: border-box; }
  body {
    margin: 0; font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    background: #f9f9f9; color: #222;
    line-height: 1.6;
    min-height: 100vh;
    display: flex; flex-direction: column;
  }
  a { text-decoration: none; color: #005f73; }
  a:hover { text-decoration: underline; }

  /* Navigation */
  nav {
    background: #0a9396; color: white;
    padding: 15px 30px;
    display: flex; justify-content: space-between; align-items: center;
    flex-wrap: wrap;
  }
  nav .logo {
    font-weight: 700; font-size: 1.8rem;
  }
  nav ul {
    list-style: none;
    display: flex; gap: 25px;
    margin: 0; padding: 0;
  }
  nav ul li a {
    color: white;
    font-weight: 600;
    transition: color 0.3s ease;
  }
  nav ul li a:hover {
    color: #94d2bd;
  }

  /* Main container */
  main {
    flex: 1 0 auto;
    max-width: 1200px;
    margin: 40px auto;
    padding: 0 20px;
  }

  section {
    margin-bottom: 60px;
  }

  /* Headings */
  h2 {
    color: #005f73;
    border-bottom: 3px solid #94d2bd;
    padding-bottom: 6px;
    margin-bottom: 20px;
  }

  /* About Section */
  #about {
    background: white;
    padding: 30px;
    border-radius: 10px;
    box-shadow: 0 0 12px rgba(0,0,0,0.05);
  }

  /* Projects Section */
  #projects {
    background: white;
    padding: 30px;
    border-radius: 10px;
    box-shadow: 0 0 12px rgba(0,0,0,0.05);
    display: grid;
    grid-template-columns: repeat(auto-fill,minmax(250px,1fr));
    gap: 25px;
  }
  .project-card {
    background: #e0fbfc;
    padding: 20px;
    border-radius: 8px;
    box-shadow: 0 2px 8px rgba(0,0,0,0.1);
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    transition: transform 0.3s ease;
  }
  .project-card:hover {
    transform: translateY(-5px);
  }
  .project-card h3 {
    margin-top: 0;
    margin-bottom: 10px;
    color: #0077b6;
  }
  .project-card p {
    flex-grow: 1;
    margin-bottom: 15px;
    color: #023047;
  }
  .project-card a {
    align-self: flex-start;
    background: #0077b6;
    color: white;
    padding: 8px 14px;
    border-radius: 6px;
    font-weight: 600;
    transition: background-color 0.3s ease;
  }
  .project-card a:hover {
    background: #023e8a;
  }

  /* Contact Section */
  #contact {
    background: white;
    padding: 30px;
    border-radius: 10px;
    box-shadow: 0 0 12px rgba(0,0,0,0.05);
    max-width: 500px;
    margin: auto;
  }
  form label {
    display: block;
    margin-bottom: 6px;
    font-weight: 600;
  }
  form input[type="text"],
  form input[type="email"],
  form textarea {
    width: 100%;
    padding: 10px;
    margin-bottom: 15px;
    border: 2px solid #94d2bd;
    border-radius: 6px;
    font-size: 1rem;
    transition: border-color 0.3s ease;
    resize: vertical;
  }
  form input[type="text"]:focus,
  form input[type="email"]:focus,
  form textarea:focus {
    border-color: #0a9396;
    outline: none;
  }
  form button {
    background: #0a9396;
    color: white;
    padding: 12px 20px;
    border: none;
    border-radius: 6px;
    font-weight: 700;
    cursor: pointer;
    transition: background-color 0.3s ease;
    width: 100%;
    font-size: 1.1rem;
  }
  form button:hover {
    background: #005f73;
  }
  #form-feedback {
    font-size: 1rem;
    margin-top: 10px;
  }
  .form-error {
    color: #bb3e03;
  }
  .form-success {
    color: #007700;
    font-weight: 700;
  }

  /* To-Do Section */
  #todo-section {
    background: white;
    padding: 30px;
    border-radius: 10px;
    box-shadow: 0 0 12px rgba(0,0,0,0.05);
    max-width: 500px;
    margin: 0 auto 60px;
  }
  #todo-section h2 {
    margin-top: 0;
  }
  #todo-input-container {
    display: flex;
    gap: 10px;
    margin-bottom: 20px;
  }
  #todo-input-container input[type="text"] {
    flex-grow: 1;
    padding: 10px;
    font-size: 1rem;
    border: 2px solid #94d2bd;
    border-radius: 6px;
    transition: border-color 0.3s ease;
  }
  #todo-input-container input[type="text"]:focus {
    border-color: #0a9396;
    outline: none;
  }
  #todo-input-container button {
    background: #0a9396;
    border: none;
    color: white;
    padding: 10px 15px;
    border-radius: 6px;
    cursor: pointer;
    font-weight: 700;
    transition: background-color 0.3s ease;
  }
  #todo-input-container button:hover {
    background: #005f73;
  }
  #todo-list {
    list-style: none;
    padding-left: 0;
    max-height: 300px;
    overflow-y: auto;
  }
  #todo-list li {
    background: #e0fbfc;
    padding: 12px 15px;
    margin-bottom: 10px;
    border-radius: 6px;
    font-weight: 600;
    display: flex;
    justify-content: space-between;
    align-items: center;
    box-shadow: 0 1px 4px rgba(0,0,0,0.1);
  }
  #todo-list li button {
    background: #bb3e03;
    border: none;
    color: white;
    padding: 6px 12px;
    border-radius: 6px;
    font-weight: 700;
    cursor: pointer;
    transition: background-color 0.3s ease;
  }
  #todo-list li button:hover {
    background: #7a2100;
  }

  /* Products Section */
  #products-section {
    background: white;
    padding: 30px;
    border-radius: 10px;
    box-shadow: 0 0 12px rgba(0,0,0,0.05);
  }
  #filters {
    display: flex;
    flex-wrap: wrap;
    gap: 20px;
    margin-bottom: 25px;
    align-items: center;
  }
  #filters select {
    padding: 8px 12px;
    font-size: 1rem;
    border-radius: 6px;
    border: 2px solid #94d2bd;
    transition: border-color 0.3s ease;
  }
  #filters select:focus {
    border-color: #0a9396;
    outline: none;
  }
  #products-list {
    display: grid;
    grid-template-columns: repeat(auto-fill,minmax(220px,1fr));
    gap: 20px;
  }
  .product-card {
    background: #e0fbfc;
    border-radius: 10px;
    padding: 20px;
    box-shadow: 0 2px 8px rgba(0,0,0,0.1);
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    transition: transform 0.3s ease;
  }
  .product-card:hover {
    transform: translateY(-5px);
  }
  .product-card h3 {
    margin-top: 0;
    color: #0077b6;
  }
  .product-card p {
    margin: 8px 0;
    color: #023047;
  }
  .product-card .price {
    font-weight: 700;
    color: #0a9396;
  }
  .product-card .rating {
    color: #bb3e03;
    font-weight: 600;
  }

  /* Responsive Nav Toggle */
  @media (max-width: 700px) {
    nav ul {
      flex-direction: column;
      width: 100%;
      display: none;
      margin-top: 15px;
    }
    nav ul.show {
      display: flex;
    }
    nav button#nav-toggle {
      background: #94d2bd;
      border: none;
      color: #0a9396;
      font-weight: 700;
      font-size: 1.2rem;
      cursor: pointer;
      border-radius: 6px;
      padding: 5px 10px;
    }
  }

</style>
</head>
<body>

<nav>
  <div class="logo">MyPortfolio</div>
  <button id="nav-toggle" aria-label="Toggle menu" aria-expanded="false">Menu</button>
  <ul id="nav-links">
    <li><a href="#about">About</a></li>
    <li><a href="#projects">Projects</a></li>
    <li><a href="#todo-section">To-Do List</a></li>
    <li><a href="#products-section">Products</a></li>
    <li><a href="#contact">Contact</a></li>
  </ul>
</nav>

<main>
  <!-- About -->
  <section id="about">
    <h2>About Me</h2>
    <p>Hello! I'm a passionate web developer with skills in HTML, CSS, and JavaScript. I love building interactive and responsive websites that are both beautiful and user-friendly. This portfolio showcases my projects and includes some practical tools I've built, like a to-do list with persistent data and a product catalog with filtering and sorting.</p>
  </section>

  <!-- Projects -->
  <section id="projects">
    <h2>Projects</h2>
    <div class="project-card">
      <h3>Responsive Portfolio</h3>
      <p>A fully responsive portfolio website showcasing personal skills, projects, and contact form.</p>
      <a href="#" target="_blank" rel="noopener">View Project</a>
    </div>
    <div class="project-card">
      <h3>To-Do List App</h3>
      <p>A to-do list web app that saves your tasks locally, so you never lose them.</p>
      <a href="#" target="_blank" rel="noopener">View Project</a>
    </div>
    <div class="project-card">
      <h3>Product Listing Page</h3>
      <p>Interactive product page with filtering by category and sorting by price and rating.</p>
      <a href="#" target="_blank" rel="noopener">View Project</a>
    </div>
  </section>

  <!-- To-Do List -->
  <section id="todo-section">
    <h2>To-Do List</h2>
    <div id="todo-input-container">
      <input type="text" id="todo-input" placeholder="Add a new task..." aria-label="Add a new task" />
            <button id="add-todo-btn" aria-label="Add task">Add</button>
    </div>
    <ul id="todo-list" aria-live="polite" aria-relevant="additions removals"></ul>
  </section>

  <!-- Products Section -->
  <section id="products-section">
    <h2>Products</h2>
    <div id="filters">
      <select id="category-filter" aria-label="Filter products by category">
        <option value="all">All Categories</option>
        <option value="electronics">Electronics</option>
        <option value="books">Books</option>
        <option value="clothing">Clothing</option>
      </select>

      <select id="sort-filter" aria-label="Sort products">
        <option value="default">Sort by</option>
        <option value="price-asc">Price: Low to High</option>
        <option value="price-desc">Price: High to Low</option>
        <option value="rating-desc">Rating: High to Low</option>
      </select>
    </div>
    <div id="products-list" aria-live="polite"></div>
  </section>

  <!-- Contact Section -->
  <section id="contact">
    <h2>Contact Me</h2>
    <form id="contact-form" novalidate>
      <label for="name">Name:</label>
      <input type="text" id="name" name="name" required aria-required="true" />
      
      <label for="email">Email:</label>
      <input type="email" id="email" name="email" required aria-required="true" />
      
      <label for="message">Message:</label>
      <textarea id="message" name="message" rows="5" required aria-required="true"></textarea>
      
      <button type="submit">Send</button>
      <div id="form-feedback" role="alert" aria-live="assertive"></div>
    </form>
  </section>
</main>

<script>
  // Navigation toggle for small screens
  const navToggle = document.getElementById('nav-toggle');
  const navLinks = document.getElementById('nav-links');

  navToggle.addEventListener('click', () => {
    const expanded = navToggle.getAttribute('aria-expanded') === 'true';
    navToggle.setAttribute('aria-expanded', !expanded);
    navLinks.classList.toggle('show');
  });

  // =========================
  // To-Do List Functionality
  // =========================

  const todoInput = document.getElementById('todo-input');
  const addTodoBtn = document.getElementById('add-todo-btn');
  const todoList = document.getElementById('todo-list');

  // Load todos from localStorage
  let todos = JSON.parse(localStorage.getItem('todos')) || [];

  function saveTodos() {
    localStorage.setItem('todos', JSON.stringify(todos));
  }

  function renderTodos() {
    todoList.innerHTML = '';
    if (todos.length === 0) {
      todoList.innerHTML = '<li>No tasks added yet.</li>';
      return;
    }
    todos.forEach((todo, index) => {
      const li = document.createElement('li');
      li.textContent = todo;
      const deleteBtn = document.createElement('button');
      deleteBtn.textContent = 'Delete';
      deleteBtn.setAttribute('aria-label', `Delete task: ${todo}`);
      deleteBtn.addEventListener('click', () => {
        todos.splice(index, 1);
        saveTodos();
        renderTodos();
      });
      li.appendChild(deleteBtn);
      todoList.appendChild(li);
    });
  }

  addTodoBtn.addEventListener('click', () => {
    const task = todoInput.value.trim();
    if (task === '') {
      alert('Please enter a task');
      return;
    }
    todos.push(task);
    todoInput.value = '';
    saveTodos();
    renderTodos();
  });

  // Allow enter key to add todo
  todoInput.addEventListener('keydown', (e) => {
    if (e.key === 'Enter') {
      e.preventDefault();
      addTodoBtn.click();
    }
  });

  renderTodos();

  // =========================
  // Products Section
  // =========================

  const products = [
    { id: 1, name: "Wireless Headphones", category: "electronics", price: 59.99, rating: 4.5 },
    { id: 2, name: "Smartphone", category: "electronics", price: 699.99, rating: 4.8 },
    { id: 3, name: "Sci-Fi Novel", category: "books", price: 15.99, rating: 4.2 },
    { id: 4, name: "Mystery Thriller", category: "books", price: 12.99, rating: 4.0 },
    { id: 5, name: "Men's Jacket", category: "clothing", price: 89.99, rating: 4.3 },
    { id: 6, name: "Women's Dress", category: "clothing", price: 49.99, rating: 4.7 }
  ];

  const categoryFilter = document.getElementById('category-filter');
  const sortFilter = document.getElementById('sort-filter');
  const productsList = document.getElementById('products-list');

  function renderProducts(list) {
    if (list.length === 0) {
      productsList.innerHTML = '<p>No products found.</p>';
      return;
    }
    productsList.innerHTML = '';
    list.forEach(product => {
      const div = document.createElement('div');
      div.className = 'product-card';
      div.innerHTML = `
        <h3>${product.name}</h3>
        <p>Category: ${product.category.charAt(0).toUpperCase() + product.category.slice(1)}</p>
        <p class="price">$${product.price.toFixed(2)}</p>
        <p class="rating">Rating: ${product.rating} ⭐</p>
      `;
      productsList.appendChild(div);
    });
  }

  function filterAndSortProducts() {
    let filtered = [...products];

    // Filter by category
    const category = categoryFilter.value;
    if (category !== 'all') {
      filtered = filtered.filter(p => p.category === category);
    }

    // Sort products
    switch (sortFilter.value) {
      case 'price-asc':
        filtered.sort((a,b) => a.price - b.price);
        break;
      case 'price-desc':
        filtered.sort((a,b) => b.price - a.price);
        break;
      case 'rating-desc':
        filtered.sort((a,b) => b.rating - a.rating);
        break;
      default:
        break;
    }

    renderProducts(filtered);
  }

  categoryFilter.addEventListener('change', filterAndSortProducts);
  sortFilter.addEventListener('change', filterAndSortProducts);

  // Initial render
  renderProducts(products);

  // =========================
  // Contact Form Handling
  // =========================

  const contactForm = document.getElementById('contact-form');
  const formFeedback = document.getElementById('form-feedback');

  contactForm.addEventListener('submit', (e) => {
    e.preventDefault();

    const name = contactForm.name.value.trim();
    const email = contactForm.email.value.trim();
    const message = contactForm.message.value.trim();

    // Simple validation
    if (!name || !email || !message) {
      formFeedback.textContent = 'Please fill in all fields.';
      formFeedback.className = 'form-error';
      return;
    }

    // Basic email format check
    const emailPattern = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    if (!emailPattern.test(email)) {
      formFeedback.textContent = 'Please enter a valid email address.';
      formFeedback.className = 'form-error';
      return;
    }

    // Simulate sending (no backend)
    formFeedback.textContent = 'Sending...';
    formFeedback.className = '';
    setTimeout(() => {
      formFeedback.textContent = 'Thank you for contacting me! I will get back to you soon.';
      formFeedback.className = 'form-success';
      contactForm.reset();
    }, 1500);
  });
</script>

</body>
</html>
