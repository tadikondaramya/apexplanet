<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Task 3: Responsive Quiz & API Fetch</title>
  <style>
    /* Reset & base */
    * {
      box-sizing: border-box;
    }
    body {
      margin: 0; padding: 0;
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      background: #f0f4f8;
      color: #333;
      line-height: 1.6;
      min-height: 100vh;
      display: flex;
      flex-direction: column;
      align-items: center;
      padding: 20px;
    }
    h1, h2 {
      text-align: center;
      color: #2a4d69;
    }
    header {
      width: 100%;
      max-width: 900px;
      margin-bottom: 30px;
    }
    nav {
      display: flex;
      justify-content: center;
      gap: 30px;
      margin-bottom: 30px;
      font-weight: 600;
      font-size: 1.1rem;
      flex-wrap: wrap;
    }
    nav a {
      text-decoration: none;
      color: #2a4d69;
      padding: 10px 15px;
      border-radius: 8px;
      transition: background-color 0.3s ease;
      user-select: none;
    }
    nav a:hover, nav a.active {
      background-color: #2a4d69;
      color: white;
    }
    main {
      width: 100%;
      max-width: 900px;
      background: white;
      border-radius: 15px;
      box-shadow: 0 10px 30px rgba(0,0,0,0.1);
      padding: 30px;
    }

    /* Quiz Styles */
    #quiz {
      display: flex;
      flex-direction: column;
      gap: 25px;
    }
    .question {
      font-size: 1.3rem;
      font-weight: 700;
    }
    .options {
      display: flex;
      flex-direction: column;
      gap: 12px;
      margin-top: 10px;
    }
    .option-btn {
      padding: 12px 20px;
      background: #e1e8f0;
      border: none;
      border-radius: 10px;
      font-size: 1.1rem;
      cursor: pointer;
      transition: background-color 0.25s ease;
      user-select: none;
      text-align: left;
      font-weight: 600;
    }
    .option-btn:hover {
      background-color: #2a4d69;
      color: white;
    }
    .option-btn.correct {
      background-color: #4caf50 !important;
      color: white !important;
      cursor: default;
    }
    .option-btn.wrong {
      background-color: #f44336 !important;
      color: white !important;
      cursor: default;
    }
    #next-btn {
      align-self: flex-end;
      padding: 12px 25px;
      font-size: 1.1rem;
      font-weight: 700;
      background-color: #2a4d69;
      color: white;
      border: none;
      border-radius: 12px;
      cursor: pointer;
      transition: background-color 0.3s ease;
      user-select: none;
    }
    #next-btn:disabled {
      background-color: #888;
      cursor: not-allowed;
    }

    /* Score */
    #score-container {
      font-size: 1.4rem;
      font-weight: 700;
      text-align: center;
      margin-top: 15px;
      color: #2a4d69;
    }

    /* Joke Section */
    #joke-section {
      margin-top: 50px;
      text-align: center;
    }
    #joke {
      font-style: italic;
      font-size: 1.2rem;
      margin-bottom: 20px;
      min-height: 70px;
      color: #555;
      user-select: text;
    }
    #new-joke-btn {
      padding: 12px 30px;
      font-size: 1.1rem;
      border: none;
      background-color: #2a4d69;
      color: white;
      border-radius: 12px;
      cursor: pointer;
      transition: background-color 0.3s ease;
      user-select: none;
    }
    #new-joke-btn:hover {
      background-color: #1f3551;
    }

    /* Responsive */
    @media (max-width: 700px) {
      main {
        padding: 20px;
      }
      .question {
        font-size: 1.1rem;
      }
      .option-btn {
        font-size: 1rem;
      }
      #next-btn, #new-joke-btn {
        font-size: 1rem;
        padding: 10px 20px;
      }
    }
    @media (max-width: 400px) {
      nav {
        gap: 15px;
      }
      nav a {
        padding: 8px 12px;
        font-size: 1rem;
      }
    }
  </style>
</head>
<body>
  <header>
    <h1>Advanced Web Dev: Quiz & API Fetch</h1>
    <nav>
      <a href="#quiz" class="active">Quiz</a>
      <a href="#joke-section">Jokes API</a>
    </nav>
  </header>

  <main>
    <!-- Quiz Section -->
    <section id="quiz">
      <h2>Interactive Quiz</h2>
      <div id="question-container">
        <div id="question" class="question"></div>
        <div id="options" class="options"></div>
      </div>
      <button id="next-btn" disabled>Next</button>
      <div id="score-container"></div>
    </section>

    <!-- Joke Section -->
    <section id="joke-section">
      <h2>Random Joke (Fetched from API)</h2>
      <div id="joke">Loading joke...</div>
      <button id="new-joke-btn">Get New Joke</button>
    </section>
  </main>

  <script>
    // ===== QUIZ FUNCTIONALITY =====
    const quizData = [
      {
        question: "Which language runs in a web browser?",
        options: ["Java", "C", "Python", "JavaScript"],
        answer: 3
      },
      {
        question: "What does CSS stand for?",
        options: ["Central Style Sheets", "Cascading Style Sheets", "Cascading Simple Sheets", "Cars SUVs Sailboats"],
        answer: 1
      },
      {
        question: "What does HTML stand for?",
        options: ["HyperText Markup Language", "HyperText Markdown Language", "HyperLoop Machine Language", "Helicopters Terminals Motorboats Lamborginis"],
        answer: 0
      },
      {
        question: "What year was JavaScript launched?",
        options: ["1996", "1995", "1994", "None of the above"],
        answer: 1
      }
    ];

    const questionEl = document.getElementById('question');
    const optionsEl = document.getElementById('options');
    const nextBtn = document.getElementById('next-btn');
    const scoreContainer = document.getElementById('score-container');

    let currentQuestionIndex = 0;
    let score = 0;
    let answered = false;

    function loadQuestion() {
      answered = false;
      nextBtn.disabled = true;
      scoreContainer.textContent = '';

      const currentQ = quizData[currentQuestionIndex];
      questionEl.textContent = `${currentQuestionIndex + 1}. ${currentQ.question}`;
      optionsEl.innerHTML = '';

      currentQ.options.forEach((option, idx) => {
        const button = document.createElement('button');
        button.classList.add('option-btn');
        button.textContent = option;
        button.addEventListener('click', () => selectAnswer(idx, button));
        optionsEl.appendChild(button);
      });
    }

    function selectAnswer(selectedIdx, button) {
      if (answered) return;
      answered = true;
      nextBtn.disabled = false;

      const currentQ = quizData[currentQuestionIndex];
      const buttons = optionsEl.querySelectorAll('button');

      buttons.forEach((btn, idx) => {
        btn.disabled = true;
        if(idx === currentQ.answer) {
          btn.classList.add('correct');
        } else if(idx === selectedIdx) {
          btn.classList.add('wrong');
        }
      });

      if(selectedIdx === currentQ.answer) {
        score++;
      }
    }

    nextBtn.addEventListener('click', () => {
      currentQuestionIndex++;
      if(currentQuestionIndex < quizData.length) {
        loadQuestion();
      } else {
        showScore();
      }
    });

    function showScore() {
      questionEl.textContent = "Quiz Complete!";
      optionsEl.innerHTML = '';
      nextBtn.disabled = true;
      scoreContainer.textContent = `Your Score: ${score} / ${quizData.length}`;
    }

    loadQuestion();

    // ===== JOKE API FUNCTIONALITY =====
    const jokeEl = document.getElementById('joke');
    const newJokeBtn = document.getElementById('new-joke-btn');

    async function fetchJoke() {
      jokeEl.textContent = "Loading joke...";
      try {
        const response = await fetch('https://icanhazdadjoke.com/', {
          headers: { Accept: 'application/json' }
        });
        if (!response.ok) throw new Error("Network response not ok");
        const data = await response.json();
        jokeEl.textContent = data.joke;
      } catch (error) {
        jokeEl.textContent = "Failed to fetch a joke. Try again.";
        console.error("Joke fetch error:", error);
      }
    }

    newJokeBtn.addEventListener('click', fetchJoke);

    // Load initial joke
    fetchJoke();

    // ===== SMOOTH SCROLL NAVIGATION =====
    document.querySelectorAll('nav a').forEach(link => {
      link.addEventListener('click', (e) => {
        e.preventDefault();
        document.querySelectorAll('nav a').forEach(a => a.classList.remove('active'));
        link.classList.add('active');
        const targetId = link.getAttribute('href').substring(1);
        document.getElementById(targetId).scrollIntoView({ behavior: 'smooth' });
      });
    });
  </script>
</body>
</html>
